{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minifier-app/./renderer.js"],"sourcesContent":["const { ipcRenderer } = window.electron;\n\nconst folderList = document.getElementById('folderList');\nconst logOutput = document.getElementById('logOutput');\nconst clearLogButton = document.getElementById('clear-logs-button');\nconst pathInput = document.getElementById('pathInput');\nconst folderSelection = document.getElementById('folderSelection');\nconst logView = document.getElementById('logView');\nconst startWatchButton = document.getElementById('start-watch-button');\nconst addFolderButton = document.getElementById('add-folder-button');\n\nconst watchStatusButton = document.getElementById('watchStatusButton');\nconst watchIcon = document.getElementById('watchIcon');\n// let isWatching = false;\n\nfunction updateWatchIcon() {\n    if (isWatching) {\n        watchIcon.classList.remove('fa-eye-slash');\n        watchIcon.classList.add('fa-eye');\n        watchStatusButton.classList.add('text-green-500');\n        watchStatusButton.classList.remove('text-gray-500');\n    } else {\n        watchIcon.classList.remove('fa-eye');\n        watchIcon.classList.add('fa-eye-slash');\n        watchStatusButton.classList.add('text-gray-500');\n        watchStatusButton.classList.remove('text-green-500');\n    }\n}\n\n// Event listener for the watch status button to start/stop watching\nwatchStatusButton.addEventListener('click', () => {\n    if (folderList.children.length === 0) {\n        ipcRenderer.notify('Folder Watch', 'No folders available to watch.');\n        return;\n    }\n\n    if (isWatching) {\n        ipcRenderer.send('stop-watching-all');\n        isWatching = false;\n        const stopButtons = document.querySelectorAll('.stop-button');\n        stopButtons.forEach((button) => {\n            button.style.display = 'none';\n        });\n    } else {\n        startWatchButton.click();\n        isWatching = true;\n        const stopButtons = document.querySelectorAll('.stop-button');\n        stopButtons.forEach((button) => {\n            button.style.display = 'block';\n            button.style.width = '30px';\n        });\n    }\n\n    updateWatchIcon();\n});\n\ndocument.getElementById('toggleMenu').addEventListener('click', () => {\n    const sideMenu = document.querySelector('.w-64');\n    sideMenu.classList.toggle('hidden');\n});\n\ndocument.getElementById('showFolders').addEventListener('click', () => {\n    folderSelection.style.display = 'block';\n    logView.style.display = 'none';\n});\n\ndocument.getElementById('showLogs').addEventListener('click', () => {\n    folderSelection.style.display = 'none';\n    logView.style.display = 'block';\n});\n\naddFolderButton.addEventListener('click', () => {\n    const folderPath = pathInput.value.trim();\n    if (folderPath) {\n        ipcRenderer.send('check-folder-exists', folderPath);\n        ipcRenderer.once('folder-exists-result', (event, exists) => {\n            if (exists && !Array.from(folderList.children).some(li => li.textContent === folderPath)) {\n                const li = document.createElement('li');\n                li.textContent = folderPath;\n                folderList.appendChild(li);\n                pathInput.value = '';\n                const folders = Array.from(folderList.children).map(li => li.textContent);\n                ipcRenderer.send('start-watch', { folders });\n                watchFolders(folders);\n            } else {\n                ipcRenderer.notify('Add Foldeer', 'Path does not exist or is already in the list.');\n            }\n        });\n    }\n});\n\ndocument.getElementById('select-folder-button').addEventListener('click', () => {\n    ipcRenderer.send('select-folder');\n});\n\nstartWatchButton.addEventListener('click', () => {\n    // const folders = Array.from(folderList.children).map(li => li.textContent);\n    const folders = Array.from(folderList.children).map(li => {\n        return li.firstChild.textContent.trim();\n    });\n    document.getElementById('showLogs').click();\n    ipcRenderer.send('start-watch', { folders });\n});\n\nipcRenderer.on('selected-folders', (event, folders) => {\n    // ipcRenderer.notify('Selected folders:', folders);\n    watchFolders(folders);\n});\n\nfunction watchFolders(folders) {\n    const uniqueFolders = [...new Set(folders)];\n    folderList.innerHTML = '';\n    uniqueFolders.forEach(folder => {\n        const li = document.createElement('li');\n        li.style.display = 'flex';\n        li.style.alignItems = 'center';\n        li.style.justifyContent = 'space-between';\n\n        li.textContent = folder;\n\n        const stopButton = document.createElement('i');\n        stopButton.className = 'fa-solid fa-trash-can ml-4 text-gray-800 p-2 hover:text-red-500 cursor-pointer stop-button';\n        stopButton.style.marginLeft = 'auto';\n        stopButton.addEventListener('click', () => {\n            folderList.removeChild(li);\n            ipcRenderer.send('stop-watching-folder', folder);\n            clearLogButton.click();\n            if (folderList.children.length > 0) {\n                isWatching = true;\n            } else {\n                isWatching = false;\n            }\n            updateWatchIcon();\n        });\n\n        li.appendChild(stopButton);\n        folderList.appendChild(li);\n\n        isWatching = true;\n        updateWatchIcon();\n    });\n}\n\ndocument.getElementById('clear-paths-button').addEventListener('click', () => {\n    ipcRenderer.send('clear-saved-paths');\n});\n\nipcRenderer.on('paths-cleared', () => {\n    ipcRenderer.notify('Cleared Folder', 'Saved paths cleared successfully.');\n    folderList.innerHTML = '';\n    clearLogButton.click();\n    isWatching = false;\n    updateWatchIcon();\n});\n\nipcRenderer.on('watch-update', (event, message) => {\n    addMessage('Watch Update', message);\n});\n\nipcRenderer.on('watch-error', (event, message) => {\n    addMessage('Watch Error', message, true);\n});\n\nipcRenderer.on('debug-message', (event, message) => {\n    addMessage('Debug', message);\n});\n\nfunction addMessage(type, message, isError = false) {\n    const messageDiv = document.createElement('div');\n    messageDiv.textContent = `[${type}] ${message}`;\n    if (isError) {\n        messageDiv.style.color = 'red';\n    }\n    logOutput.appendChild(messageDiv);\n    logOutput.scrollTop = logOutput.scrollHeight;\n    updateClearButtonState();\n}\n\nclearLogButton.addEventListener('click', () => {\n    logOutput.innerHTML = '';\n    updateClearButtonState();\n    // Optionally, send a message to the main process if needed\n    // ipcRenderer.send('clear-main-log');\n});\n\nfunction updateClearButtonState() {\n    clearLogButton.disabled = logOutput.children.length === 0;\n}\n\nupdateClearButtonState();\n"],"names":["ipcRenderer","window","electron","folderList","document","getElementById","logOutput","clearLogButton","pathInput","folderSelection","logView","startWatchButton","addFolderButton","watchStatusButton","watchIcon","updateWatchIcon","isWatching","classList","remove","add","watchFolders","folders","uniqueFolders","Set","innerHTML","forEach","folder","li","createElement","style","display","alignItems","justifyContent","textContent","stopButton","className","marginLeft","addEventListener","removeChild","send","click","children","length","appendChild","addMessage","type","message","isError","arguments","undefined","messageDiv","concat","color","scrollTop","scrollHeight","updateClearButtonState","disabled","querySelectorAll","button","width","notify","querySelector","toggle","folderPath","value","trim","once","event","exists","Array","from","some","map","firstChild","on"],"sourceRoot":""}